# Create and start device
function create-and-start-device {
    # Create device
    echo n | android create avd -f \
        -n "${AVD_NAME:-test}" \
        -t "${AVD_TARGET:-android-21}" \
        -b "${AVD_ABI:-armeabi-v7a}" \
        -g "${AVD_TAG:-default}"
    # Start device
    emulator -avd "${AVD_NAME:-test}" \
        -no-skin \
        -no-audio \
        -no-window \
        -no-boot-anim \
        -debug "${AVD_DEBUG:-avd_config}" &
}

# Install and update SDK
function install-and-update-sdk {
    # Keep SDK packages up-to-date (only missing suggested updates are installed).
    echo y | android update sdk -u -t \
        ${UPDATE_PKGS:-'platform-tools,tools,extra-android-m2repository,extra-google-m2repository'}
    # Install or reinstall SDK packages (if empty, all packages are installed).
    echo y | android update sdk -a -u -t \
        ${INSTALL_PKGS:-'build-tools-23.0.1,android-23'},${TARGET_PKGS:-}
}

# Wait for device online
function wait-for-device-online {
    adb wait-for-device get-serialno # start adbd, wait for device connected and show android serial
}

# Wait for device ready
function wait-for-device-ready {
    local bootanim=""
    local failcounter=0
    until [[ "$bootanim" =~ "stopped" ]]; do
       bootanim=`adb hell getprop init.svc.bootanim 2>&1`
       echo "$bootanim"
       if [[ "$bootanim" =~ "not found" ]]; then
          let "failcounter += 1"
          if [[ ${failcounter} -gt 30 ]]; then
            echo "Failed to start emulator"
            exit 1
          fi
       fi
       sleep 1
    done

    echo "Done"
}
